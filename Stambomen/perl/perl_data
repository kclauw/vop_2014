#!perl/bin/perl
use strict;
use warnings;
use LWP::Simple;
use HTML::TreeBuilder;
use DBI;
use Modern::Perl;
use WWW::Mechanize;
use HTML::TableExtract;



my $db ="team12_staging";
my $user = "team12";
my $pass = "RKAxujnJ";
my $host="db.vop.tiwi.be:443";
my $query = "select * from Person";
my $dbh = DBI->connect("DBI:mysql:$db:$host", $user, $pass);
my $sqlQuery  = $dbh->prepare($query)
or die "Can't prepare $query: $dbh->errstr\n";
my $rv = $sqlQuery->execute
or die "can't execute the query: $sqlQuery->errstr";
my $rc = $sqlQuery->finish;


my $firstURL= "http://www.naamkunde.net/?page_id=293&vt_list_female=true";
my $secondURL = "http://www.naamkunde.net/?page_id=293&vt_list_male=true";
my $surURL = "http://home.scarlet.be/~rg588291/surname.htm";



my $site = get($surURL);

my $femaleTree = HTML::TreeBuilder->new_from_url($firstURL);
my $maleTree = HTML::TreeBuilder->new_from_url($secondURL);
my $surTree = HTML::TreeBuilder->new_from_url($surURL);
my @femalenames;
my @malenames;
my @surnames;

 my @AoH = (
        {
            firstname     => "fred",
            surname   => "barney",
            gender   => "m",
        }
  );

foreach my $sur ($surTree->look_down(_tag => 'a',sub { $_[0]->as_text =~/^[a-zA-Z]/})){
  say $sur->as_text;
  push @surnames,$sur->as_text;
};

foreach my $female ($femaleTree->look_down(_tag => 'td',sub { $_[0]->as_text =~/^[a-zA-Z]/})){
  push @femalenames,substr($female->as_text, 0, -3)
};
foreach my $male ($maleTree->look_down(_tag => 'td',sub { $_[0]->as_text =~/^[a-zA-Z]/})){
  push @malenames,substr($male->as_text, 0, -3)
};




my $teller = 0;
for(my $i = 0; $i  < 10; $i++){
  for(my $y = 0; $y  < 3; $y++){
      push @AoH, { firstname => $femalenames[$teller],surname=>$surnames[$teller],gender => "v" };
      push @AoH, { firstname => $malenames[$teller],surname=>$surnames[$teller],gender => "m" };
      $teller++;
  }
  
};




  



  

for my $i ( 0 .. $#AoH ) {
    print "$i is { ";
    for my $role ( keys %{ $AoH[$i] } ) {
         print "$role=$AoH[$i]{$role} ";
    }
    print "}\n";
}





 